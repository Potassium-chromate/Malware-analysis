===========================[STATIC ANALYSIS RESULTS]===========================

Filetype: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), statically linked, stripped
File Size: 2548.01 KB (2609160 bytes)
md5sum: c76b11be6fdeb10b7fccd678b42a7c97
ssdeep: 49152:oIgrtR1Vl3vrk0c6wOu4hMs9jvlOQhmRYSoXFIz9MZeaFquFUTf80MGIDY9G:oIYtR1VK0c6wOu4PJ1wYTUA0M2G
ELF Header:
  Magic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00 
  Class:                             ELF64
  Data:                              2's complement, little endian
  Version:                           1 (current)
  OS/ABI:                            UNIX - System V
  ABI Version:                       0
  Type:                              EXEC (Executable file)
  Machine:                           Advanced Micro Devices X86-64
  Version:                           0x1
  Entry point address:               0x405723
  Start of program headers:          64 (bytes into file)
  Start of section headers:          2607944 (bytes into file)
  Flags:                             0x0
  Size of this header:               64 (bytes)
  Size of program headers:           56 (bytes)
  Number of program headers:         5
  Size of section headers:           64 (bytes)
  Number of section headers:         19
  Section header string table index: 18

----------------------------------------
ssdeep comparison:

----------------------------------------
Strings:
	Ascii strings written to /home/eason/linux_reports/0dcfa54a7e8a4e631ef466670ce604a61f3b0e8b3e9cf72c943278c0f77c31a2/strings_ascii.txt
	Unicode strings written to /home/eason/linux_reports/0dcfa54a7e8a4e631ef466670ce604a61f3b0e8b3e9cf72c943278c0f77c31a2/strings_unicode.txt
----------------------------------------
Packers:
	[]
----------------------------------------
Malware Capabilities and classification using YARA rules:
	[]
----------------------------------------
Virustotal:
	
----------------------------------------
Program Header Information:

Elf file type is EXEC (Executable file)
Entry point 0x405723
There are 5 program headers, starting at offset 64

Program Headers:
  Type           Offset             VirtAddr           PhysAddr
                 FileSiz            MemSiz              Flags  Align
  LOAD           0x0000000000000000 0x0000000000400000 0x0000000000400000
                 0x000000000027017d 0x000000000027017d  R E    0x200000
  LOAD           0x0000000000270250 0x0000000000870250 0x0000000000870250
                 0x000000000000c820 0x000000000009b268  RW     0x200000
  TLS            0x0000000000270250 0x0000000000870250 0x0000000000870250
                 0x0000000000000000 0x0000000000000020  R      0x10
  GNU_STACK      0x0000000000000000 0x0000000000000000 0x0000000000000000
                 0x0000000000000000 0x0000000000000000  RW     0x10
  GNU_RELRO      0x0000000000270250 0x0000000000870250 0x0000000000870250
                 0x000000000000adb0 0x000000000000adb0  R      0x1

 Section to Segment mapping:
  Segment Sections...
   00     .init .text .fini .rodata .eh_frame .gcc_except_table 
   01     .init_array .fini_array .ctors .dtors .data.rel.ro .got .got.plt .data .bss 
   02     .tbss 
   03     
   04     .init_array .fini_array .ctors .dtors .data.rel.ro .got 

----------------------------------------
Section Header Information:
There are 19 section headers, starting at offset 0x27cb48:

Section Headers:
  [Nr] Name              Type             Address           Offset
       Size              EntSize          Flags  Link  Info  Align
  [ 0]                   NULL             0000000000000000  00000000
       0000000000000000  0000000000000000           0     0     0
  [ 1] .init             PROGBITS         0000000000400158  00000158
       000000000000000d  0000000000000000  AX       0     0     1
  [ 2] .text             PROGBITS         0000000000400180  00000180
       00000000001fead1  0000000000000000  AX       0     0     64
  [ 3] .fini             PROGBITS         00000000005fec51  001fec51
       0000000000000008  0000000000000000  AX       0     0     1
  [ 4] .rodata           PROGBITS         00000000005fec80  001fec80
       0000000000023a30  0000000000000000   A       0     0     64
  [ 5] .eh_frame         PROGBITS         00000000006226b0  002226b0
       0000000000045a78  0000000000000000   A       0     0     8
  [ 6] .gcc_except_table PROGBITS         0000000000668128  00268128
       0000000000008055  0000000000000000   A       0     0     4
  [ 7] .tbss             NOBITS           0000000000870250  00270250
       0000000000000020  0000000000000000 WAT       0     0     16
  [ 8] .init_array       INIT_ARRAY       0000000000870250  00270250
       0000000000000128  0000000000000008  WA       0     0     8
  [ 9] .fini_array       FINI_ARRAY       0000000000870378  00270378
       0000000000000008  0000000000000008  WA       0     0     8
  [10] .ctors            PROGBITS         0000000000870380  00270380
       0000000000000010  0000000000000000  WA       0     0     8
  [11] .dtors            PROGBITS         0000000000870390  00270390
       0000000000000010  0000000000000000  WA       0     0     8
  [12] .data.rel.ro      PROGBITS         00000000008703a0  002703a0
       000000000000a968  0000000000000000  WA       0     0     32
  [13] .got              PROGBITS         000000000087ad08  0027ad08
       00000000000002e8  0000000000000000  WA       0     0     8
  [14] .got.plt          PROGBITS         000000000087b000  0027b000
       0000000000000018  0000000000000008  WA       0     0     8
  [15] .data             PROGBITS         000000000087b020  0027b020
       0000000000001a50  0000000000000000  WA       0     0     32
  [16] .bss              NOBITS           000000000087ca80  0027ca70
       000000000008ea38  0000000000000000  WA       0     0     64
  [17] .comment          PROGBITS         0000000000000000  0027ca70
       0000000000000035  0000000000000001  MS       0     0     1
  [18] .shstrtab         STRTAB           0000000000000000  0027caa5
       000000000000009c  0000000000000000           0     0     1
Key to Flags:
  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),
  L (link order), O (extra OS processing required), G (group), T (TLS),
  C (compressed), x (unknown), o (OS specific), E (exclude),
  l (large), p (processor specific)

----------------------------------------
Symbol Information:

----------------------------------------
==========================[DYNAMIC ANALYSIS RESULTS]==========================

