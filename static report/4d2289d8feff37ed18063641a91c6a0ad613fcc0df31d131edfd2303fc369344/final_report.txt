===========================[STATIC ANALYSIS RESULTS]===========================

Filetype: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), statically linked, stripped
File Size: 754.05 KB (772152 bytes)
md5sum: 022fdd28ca1c1d3f73e711b3d6404586
ssdeep: 12288:g9VOudOBHXxHjdYYLD1+/JPCUl7PKLJ3cPpWwpsqSIK:yOudOBHXFjdFLDs1Co7PKLJ3S4wK
ELF Header:
  Magic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00 
  Class:                             ELF64
  Data:                              2's complement, little endian
  Version:                           1 (current)
  OS/ABI:                            UNIX - System V
  ABI Version:                       0
  Type:                              EXEC (Executable file)
  Machine:                           Advanced Micro Devices X86-64
  Version:                           0x1
  Entry point address:               0x4003c3
  Start of program headers:          64 (bytes into file)
  Start of section headers:          770936 (bytes into file)
  Flags:                             0x0
  Size of this header:               64 (bytes)
  Size of program headers:           56 (bytes)
  Number of program headers:         5
  Size of section headers:           64 (bytes)
  Number of section headers:         19
  Section header string table index: 18

----------------------------------------
ssdeep comparison:

----------------------------------------
Strings:
	Ascii strings written to /home/eason/linux_reports/4d2289d8feff37ed18063641a91c6a0ad613fcc0df31d131edfd2303fc369344/strings_ascii.txt
	Unicode strings written to /home/eason/linux_reports/4d2289d8feff37ed18063641a91c6a0ad613fcc0df31d131edfd2303fc369344/strings_unicode.txt
----------------------------------------
Packers:
	[]
----------------------------------------
Malware Capabilities and classification using YARA rules:
	[]
----------------------------------------
Virustotal:
	
----------------------------------------
Program Header Information:

Elf file type is EXEC (Executable file)
Entry point 0x4003c3
There are 5 program headers, starting at offset 64

Program Headers:
  Type           Offset             VirtAddr           PhysAddr
                 FileSiz            MemSiz              Flags  Align
  LOAD           0x0000000000000000 0x0000000000400000 0x0000000000400000
                 0x00000000000bab3a 0x00000000000bab3a  R E    0x200000
  LOAD           0x00000000000badf0 0x00000000006badf0 0x00000000006badf0
                 0x00000000000014d8 0x0000000000003e38  RW     0x200000
  TLS            0x00000000000badf0 0x00000000006badf0 0x00000000006badf0
                 0x0000000000000000 0x0000000000000010  R      0x8
  GNU_STACK      0x0000000000000000 0x0000000000000000 0x0000000000000000
                 0x0000000000000000 0x0000000000000000  RW     0x10
  GNU_RELRO      0x00000000000badf0 0x00000000006badf0 0x00000000006badf0
                 0x0000000000001210 0x0000000000001210  R      0x1

 Section to Segment mapping:
  Segment Sections...
   00     .init .text .fini .rodata .eh_frame .gcc_except_table 
   01     .init_array .fini_array .ctors .dtors .data.rel.ro .got .got.plt .data .bss 
   02     .tbss 
   03     
   04     .init_array .fini_array .ctors .dtors .data.rel.ro .got 

----------------------------------------
Section Header Information:
There are 19 section headers, starting at offset 0xbc378:

Section Headers:
  [Nr] Name              Type             Address           Offset
       Size              EntSize          Flags  Link  Info  Align
  [ 0]                   NULL             0000000000000000  00000000
       0000000000000000  0000000000000000           0     0     0
  [ 1] .init             PROGBITS         0000000000400158  00000158
       000000000000000d  0000000000000000  AX       0     0     1
  [ 2] .text             PROGBITS         0000000000400170  00000170
       000000000009d252  0000000000000000  AX       0     0     16
  [ 3] .fini             PROGBITS         000000000049d3c2  0009d3c2
       0000000000000008  0000000000000000  AX       0     0     1
  [ 4] .rodata           PROGBITS         000000000049d3e0  0009d3e0
       000000000000cd68  0000000000000000   A       0     0     32
  [ 5] .eh_frame         PROGBITS         00000000004aa148  000aa148
       000000000001065c  0000000000000000   A       0     0     8
  [ 6] .gcc_except_table PROGBITS         00000000004ba7a4  000ba7a4
       0000000000000396  0000000000000000   A       0     0     4
  [ 7] .tbss             NOBITS           00000000006badf0  000badf0
       0000000000000010  0000000000000000 WAT       0     0     8
  [ 8] .init_array       INIT_ARRAY       00000000006badf0  000badf0
       0000000000000028  0000000000000008  WA       0     0     8
  [ 9] .fini_array       FINI_ARRAY       00000000006bae18  000bae18
       0000000000000008  0000000000000008  WA       0     0     8
  [10] .ctors            PROGBITS         00000000006bae20  000bae20
       0000000000000010  0000000000000000  WA       0     0     8
  [11] .dtors            PROGBITS         00000000006bae30  000bae30
       0000000000000010  0000000000000000  WA       0     0     8
  [12] .data.rel.ro      PROGBITS         00000000006bae40  000bae40
       00000000000011b8  0000000000000000  WA       0     0     32
  [13] .got              PROGBITS         00000000006bbff8  000bbff8
       0000000000000008  0000000000000008  WA       0     0     8
  [14] .got.plt          PROGBITS         00000000006bc000  000bc000
       0000000000000018  0000000000000008  WA       0     0     8
  [15] .data             PROGBITS         00000000006bc020  000bc020
       00000000000002a8  0000000000000000  WA       0     0     32
  [16] .bss              NOBITS           00000000006bc2e0  000bc2c8
       0000000000002948  0000000000000000  WA       0     0     32
  [17] .comment          PROGBITS         0000000000000000  000bc2c8
       0000000000000011  0000000000000001  MS       0     0     1
  [18] .shstrtab         STRTAB           0000000000000000  000bc2d9
       000000000000009c  0000000000000000           0     0     1
Key to Flags:
  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),
  L (link order), O (extra OS processing required), G (group), T (TLS),
  C (compressed), x (unknown), o (OS specific), E (exclude),
  l (large), p (processor specific)

----------------------------------------
Symbol Information:

----------------------------------------
==========================[DYNAMIC ANALYSIS RESULTS]==========================

