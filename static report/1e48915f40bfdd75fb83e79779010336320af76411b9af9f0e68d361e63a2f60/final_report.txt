===========================[STATIC ANALYSIS RESULTS]===========================

Filetype: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), statically linked, stripped
File Size: 4897.63 KB (5015176 bytes)
md5sum: a56a581d7a3959d786147b8e2c8e688b
ssdeep: 98304:NJR/e40lOOOOOOOOOOTG/fwYjKZSq1pCBNw+O7P/qW/oLjttEtNWwLc5m+Vcri+2:NJR/HEm1VbxF9Ehe
ELF Header:
  Magic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00 
  Class:                             ELF64
  Data:                              2's complement, little endian
  Version:                           1 (current)
  OS/ABI:                            UNIX - System V
  ABI Version:                       0
  Type:                              EXEC (Executable file)
  Machine:                           Advanced Micro Devices X86-64
  Version:                           0x1
  Entry point address:               0x40dbd3
  Start of program headers:          64 (bytes into file)
  Start of section headers:          5013960 (bytes into file)
  Flags:                             0x0
  Size of this header:               64 (bytes)
  Size of program headers:           56 (bytes)
  Number of program headers:         5
  Size of section headers:           64 (bytes)
  Number of section headers:         19
  Section header string table index: 18

----------------------------------------
ssdeep comparison:

----------------------------------------
Strings:
	Ascii strings written to /home/eason/linux_reports/1e48915f40bfdd75fb83e79779010336320af76411b9af9f0e68d361e63a2f60/strings_ascii.txt
	Unicode strings written to /home/eason/linux_reports/1e48915f40bfdd75fb83e79779010336320af76411b9af9f0e68d361e63a2f60/strings_unicode.txt
----------------------------------------
Packers:
	[]
----------------------------------------
Malware Capabilities and classification using YARA rules:
	[irc, bankers]
----------------------------------------
Virustotal:
	
----------------------------------------
Program Header Information:

Elf file type is EXEC (Executable file)
Entry point 0x40dbd3
There are 5 program headers, starting at offset 64

Program Headers:
  Type           Offset             VirtAddr           PhysAddr
                 FileSiz            MemSiz              Flags  Align
  LOAD           0x0000000000000000 0x0000000000400000 0x0000000000400000
                 0x000000000048d878 0x000000000048d878  R E    0x200000
  LOAD           0x000000000048e670 0x0000000000a8e670 0x0000000000a8e670
                 0x0000000000039aa8 0x00000000000d56e8  RW     0x200000
  TLS            0x000000000048e670 0x0000000000a8e670 0x0000000000a8e670
                 0x0000000000000000 0x0000000000000020  R      0x10
  GNU_STACK      0x0000000000000000 0x0000000000000000 0x0000000000000000
                 0x0000000000000000 0x0000000000000000  RW     0x10
  GNU_RELRO      0x000000000048e670 0x0000000000a8e670 0x0000000000a8e670
                 0x0000000000033990 0x0000000000033990  R      0x1

 Section to Segment mapping:
  Segment Sections...
   00     .init .text .fini .rodata .eh_frame .gcc_except_table 
   01     .init_array .fini_array .ctors .dtors .data.rel.ro .got .got.plt .data .bss 
   02     .tbss 
   03     
   04     .init_array .fini_array .ctors .dtors .data.rel.ro .got 

----------------------------------------
Section Header Information:
There are 19 section headers, starting at offset 0x4c81c8:

Section Headers:
  [Nr] Name              Type             Address           Offset
       Size              EntSize          Flags  Link  Info  Align
  [ 0]                   NULL             0000000000000000  00000000
       0000000000000000  0000000000000000           0     0     0
  [ 1] .init             PROGBITS         0000000000400158  00000158
       000000000000000d  0000000000000000  AX       0     0     1
  [ 2] .text             PROGBITS         0000000000400180  00000180
       000000000038fce2  0000000000000000  AX       0     0     64
  [ 3] .fini             PROGBITS         000000000078fe62  0038fe62
       0000000000000008  0000000000000000  AX       0     0     1
  [ 4] .rodata           PROGBITS         000000000078fe80  0038fe80
       000000000006bf90  0000000000000000   A       0     0     64
  [ 5] .eh_frame         PROGBITS         00000000007fbe10  003fbe10
       00000000000897cc  0000000000000000   A       0     0     8
  [ 6] .gcc_except_table PROGBITS         00000000008855dc  004855dc
       000000000000829c  0000000000000000   A       0     0     4
  [ 7] .tbss             NOBITS           0000000000a8e670  0048e670
       0000000000000020  0000000000000000 WAT       0     0     16
  [ 8] .init_array       INIT_ARRAY       0000000000a8e670  0048e670
       0000000000000128  0000000000000008  WA       0     0     8
  [ 9] .fini_array       FINI_ARRAY       0000000000a8e798  0048e798
       0000000000000008  0000000000000008  WA       0     0     8
  [10] .ctors            PROGBITS         0000000000a8e7a0  0048e7a0
       0000000000000010  0000000000000000  WA       0     0     8
  [11] .dtors            PROGBITS         0000000000a8e7b0  0048e7b0
       0000000000000010  0000000000000000  WA       0     0     8
  [12] .data.rel.ro      PROGBITS         0000000000a8e7c0  0048e7c0
       0000000000033808  0000000000000000  WA       0     0     32
  [13] .got              PROGBITS         0000000000ac1fc8  004c1fc8
       0000000000000030  0000000000000008  WA       0     0     8
  [14] .got.plt          PROGBITS         0000000000ac2000  004c2000
       0000000000000018  0000000000000008  WA       0     0     8
  [15] .data             PROGBITS         0000000000ac2020  004c2020
       00000000000060f8  0000000000000000  WA       0     0     32
  [16] .bss              NOBITS           0000000000ac8140  004c8118
       000000000009bc18  0000000000000000  WA       0     0     64
  [17] .comment          PROGBITS         0000000000000000  004c8118
       0000000000000011  0000000000000001  MS       0     0     1
  [18] .shstrtab         STRTAB           0000000000000000  004c8129
       000000000000009c  0000000000000000           0     0     1
Key to Flags:
  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),
  L (link order), O (extra OS processing required), G (group), T (TLS),
  C (compressed), x (unknown), o (OS specific), E (exclude),
  l (large), p (processor specific)

----------------------------------------
Symbol Information:

----------------------------------------
==========================[DYNAMIC ANALYSIS RESULTS]==========================

